{
    "openapi": "3.0.0",
    "info": {
        "title": "L5 OpenApi",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "muhammad.akbar5999@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get list of books",
                "description": "Returns list of books",
                "operationId": "getBooksList",
                "parameters": [
                    {
                        "name": "genre",
                        "in": "query",
                        "description": "Genre of the book",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "Author of the book",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "isSuccess": {
                                            "description": "Status of the request",
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "description": "Message of the request",
                                            "type": "string",
                                            "example": "Books retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Book"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Store new book",
                "description": "Store new book",
                "operationId": "storeBook",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "author",
                                    "genre",
                                    "price",
                                    "quantity"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Book Title"
                                    },
                                    "author": {
                                        "type": "string",
                                        "example": "Author Name"
                                    },
                                    "genre": {
                                        "type": "string",
                                        "example": "Genre"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "100.00"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": "10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "isSuccess": {
                                            "description": "Status of the request",
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "description": "Message of the request",
                                            "type": "string",
                                            "example": "Book created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Book"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "isSuccess": {
                                            "description": "Status of the request",
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "description": "Message of the request",
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "isSuccess": {
                                            "description": "Status of the request",
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "description": "Message of the request",
                                            "type": "string",
                                            "example": "Internal server error"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register new user",
                "description": "Register new user",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Full name of the user",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Email of the user",
                                        "type": "string",
                                        "format": "email",
                                        "example": "[email protected]"
                                    },
                                    "password": {
                                        "description": "Password of the user",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "description": "Login user",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email of the user",
                                        "type": "string",
                                        "format": "email",
                                        "example": "[email protected]"
                                    },
                                    "password": {
                                        "description": "Password of the user",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Logout user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Book": {
                "title": "Book",
                "description": "Book model",
                "properties": {
                    "id": {
                        "description": "ID of the book",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "title": {
                        "description": "Title of the book",
                        "type": "string",
                        "example": "Book Title"
                    },
                    "author": {
                        "description": "Author of the book",
                        "type": "string",
                        "example": "Author Name"
                    },
                    "genre": {
                        "description": "Genre of the book",
                        "type": "string",
                        "example": "Genre"
                    },
                    "price": {
                        "description": "Price of the book",
                        "type": "number",
                        "format": "float",
                        "example": "100.00"
                    },
                    "quantity": {
                        "description": "Quantity of the book",
                        "type": "integer",
                        "example": "10"
                    },
                    "created_at": {
                        "description": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-08-01T00:00:00Z"
                    },
                    "updated_at": {
                        "description": "Updated at",
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-08-01T00:00:00Z"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "500": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "isSuccess": {
                                    "description": "Status of the request",
                                    "type": "boolean",
                                    "example": "false"
                                },
                                "message": {
                                    "description": "Message of the request",
                                    "type": "string",
                                    "example": "Internal server error"
                                },
                                "data": {
                                    "type": "object",
                                    "example": "null"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "sanctum": []
        }
    ]
}